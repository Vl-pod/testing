{"version":3,"file":"main.js","mappings":"kgBAMO,MAAMA,EACXC,YAAYC,GACVC,KAAKD,SAAWA,EAEhBC,KAAKC,SAAWD,KAAKC,SAASC,KAAKF,MACnCA,KAAKG,aAAeH,KAAKG,aAAaD,KAAKF,KAC7C,CAEWI,oBACT,MAAQ,2jBAcV,CAEWC,4BACT,MAAO,SACT,CAEWC,2BACT,MAAO,QACT,CAEWC,sBACT,MAAO,iBACT,CAEWC,2BACT,MAAO,OACT,CAEAC,YACET,KAAKD,SAASW,UAAYb,EAAcO,OAExCJ,KAAKW,QAAUX,KAAKD,SAASa,cAAcf,EAAcU,UACzDP,KAAKa,OAASb,KAAKW,QAAQC,cAAcf,EAAcQ,gBACvDL,KAAKc,MAAQd,KAAKW,QAAQC,cAAcf,EAAcS,eACtDN,KAAKe,MAAQ,IAAIf,KAAKD,SAASiB,iBAAiBnB,EAAcW,gBAE9DR,KAAKW,QAAQM,iBAAiB,SAAUjB,KAAKC,UAC7CD,KAAKW,QAAQM,iBAAiB,QAASjB,KAAKG,aAC9C,CAEAA,aAAae,GACXA,EAAEC,iBAEF,MAAM,MAAEC,GAAUpB,KAAKc,MACvBd,KAAKe,MAAMM,SAASC,GAASA,EAAKC,UAAUC,OAAO,YACnD,MAAMC,EC9DH,SAAwBC,EAAMC,GACnC,MAAMC,EAAaC,OAAOH,GAAMI,MAAM,EAAG,GAEzC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAAK,CACpC,MAAM,WAAEE,GAAeN,EAAKI,GAC5B,GAAIE,EAAWC,MAAMC,GAAQN,OAAOM,GAAKC,WAAWR,KAClD,OAAOD,EAAKI,GAAGM,IAEnB,CACA,MAAO,yBACT,CDoDqBC,CAAeC,OAAOnB,GAAQO,GACzCa,EAAgBxC,KAAKW,QAAQC,cAAe,IAAGa,KAC/B,OAAlBe,EAIJA,EAAcjB,UAAUkB,IAAI,UAH1BzC,KAAKe,MAAMM,SAASC,GAASA,EAAKC,UAAUC,OAAO,WAIvD,CAEAvB,SAASiB,GACPA,EAAEC,iBACF,MAAM,MAAEC,GAAUpB,KAAKc,OExEpB,SAAmB4B,GACxB,IAAIC,EAAM,EACV,MAAMC,EAAgBf,OAAOa,GACvBG,EAAUD,EAAcZ,OACxBc,EAASD,EAAU,EAEzB,IAAK,IAAId,EAAI,EAAGA,EAAIc,EAASd,IAAK,CAChC,IAAIgB,EAAQC,SAASJ,EAAcb,IAE/BA,EAAI,IAAMe,IACZC,GAAS,GAGPA,EAAQ,IACVA,GAAS,GAEXJ,GAAOI,CACT,CACA,OAAOJ,EAAM,IAAO,CACtB,CFsDmBM,CAAU7B,IAKvBpB,KAAKc,MAAMS,UAAUC,OAAO,SAC5BxB,KAAKc,MAAMS,UAAUkB,IAAI,aAJzBzC,KAAKc,MAAMS,UAAUC,OAAO,WAC5BxB,KAAKc,MAAMS,UAAUkB,IAAI,UAKb,KAAVrB,GACFpB,KAAKc,MAAMS,UAAUkB,IAAI,UAE7B,EGrFF,MAAMS,EAAYC,SAASvC,cAAc,cAC5B,IAAIf,EAAcqD,GAE1BzC,W","sources":["webpack://testing/./src/js/widget.js","webpack://testing/./src/js/cardDefinition.js","webpack://testing/./src/js/validCard.js","webpack://testing/./src/js/app.js"],"sourcesContent":["/* eslint-disable import/no-unresolved */\n/* eslint-disable import/prefer-default-export */\nimport { validCard } from './validCard';\nimport data from '../components/numberCardList/namberCardList.json';\nimport { cardDefinition } from './cardDefinition';\n\nexport class InnFormWidget {\n  constructor(parentEl) {\n    this.parentEl = parentEl;\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDefinition = this.onDefinition.bind(this);\n  }\n\n  static get markup() {\n    return `\n            <form class=\"container-card\">\n                <div class=\"cards\">\n                    <div class=\"card Diners\"></div>\n                    <div class=\"card Discover\"></div>\n                    <div class=\"card Jcb\"></div>\n                    <div class=\"card Mastercard\"></div>\n                    <div class=\"card Mir\"></div>\n                    <div class=\"card Visa\"></div>\n                </div>\n                <input type=\"text\" class=\"input\">\n                <button class=\"submit\">Click to Validate</button>\n            </form>\n        `;\n  }\n\n  static get submitSelector() {\n    return '.submit';\n  }\n\n  static get inputSelector() {\n    return '.input';\n  }\n\n  static get selector() {\n    return '.container-card';\n  }\n\n  static get cardtSelector() {\n    return '.card';\n  }\n\n  bindToDOM() {\n    this.parentEl.innerHTML = InnFormWidget.markup;\n\n    this.element = this.parentEl.querySelector(InnFormWidget.selector);\n    this.submit = this.element.querySelector(InnFormWidget.submitSelector);\n    this.input = this.element.querySelector(InnFormWidget.inputSelector);\n    this.cards = [...this.parentEl.querySelectorAll(InnFormWidget.cardtSelector)];\n\n    this.element.addEventListener('submit', this.onSubmit);\n    this.element.addEventListener('input', this.onDefinition);\n  }\n\n  onDefinition(e) {\n    e.preventDefault();\n\n    const { value } = this.input;\n    this.cards.forEach((item) => item.classList.remove('active'));\n    const nameCard = cardDefinition(Number(value), data);\n    const targetElement = this.element.querySelector(`.${nameCard}`);\n    if (targetElement === null) {\n      this.cards.forEach((item) => item.classList.remove('active'));\n      return;\n    }\n    targetElement.classList.add('active');\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { value } = this.input;\n    const result = validCard(value);\n    if (result) {\n      this.input.classList.remove('invalid');\n      this.input.classList.add('valid');\n    } else {\n      this.input.classList.remove('valid');\n      this.input.classList.add('invalid');\n    }\n    if (value === '') {\n      this.input.classList.add('invalid');\n    }\n  }\n}\n","/* eslint-disable no-plusplus */\n/* eslint-disable import/prefer-default-export */\nexport function cardDefinition(card, data) {\n  const cardPrefix = String(card).slice(0, 4);\n\n  for (let i = 0; i < data.length; i++) {\n    const { validNaber } = data[i];\n    if (validNaber.some((num) => String(num).startsWith(cardPrefix))) {\n      return data[i].name;\n    }\n  }\n  return 'Не валидный номер карты';\n}\n","/* eslint-disable no-plusplus */\n/* eslint-disable radix */\n/* eslint-disable import/prefer-default-export */\nexport function validCard(numberCard) {\n  let sum = 0;\n  const strNumberCard = String(numberCard);\n  const nDigits = strNumberCard.length;\n  const parity = nDigits % 2;\n\n  for (let i = 0; i < nDigits; i++) {\n    let digit = parseInt(strNumberCard[i]);\n\n    if (i % 2 === parity) {\n      digit *= 2;\n    }\n\n    if (digit > 9) {\n      digit -= 9;\n    }\n    sum += digit;\n  }\n  return sum % 10 === 0;\n}\n","import { InnFormWidget } from './widget';\n\nconst container = document.querySelector('.container');\nconst form = new InnFormWidget(container);\n\nform.bindToDOM();\n"],"names":["InnFormWidget","constructor","parentEl","this","onSubmit","bind","onDefinition","markup","submitSelector","inputSelector","selector","cardtSelector","bindToDOM","innerHTML","element","querySelector","submit","input","cards","querySelectorAll","addEventListener","e","preventDefault","value","forEach","item","classList","remove","nameCard","card","data","cardPrefix","String","slice","i","length","validNaber","some","num","startsWith","name","cardDefinition","Number","targetElement","add","numberCard","sum","strNumberCard","nDigits","parity","digit","parseInt","validCard","container","document"],"sourceRoot":""}